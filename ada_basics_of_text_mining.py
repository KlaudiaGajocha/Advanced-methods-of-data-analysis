# -*- coding: utf-8 -*-
"""ADA - Basics of text mining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11MqvMPIc90qu4MNP57bxMkNqWBg1jvsJ
"""

import numpy as np
import pandas as pd
import re
import nltk
import spacy
import string

input = input("Wpisz swoje zdanie")
print(input)

#Sprawdzał liczbę znaków w ciągu.
len(input)

#Dzielił ciąg znaków na pojedyncze słowa
spliting = input.split(" ")
print(spliting)

#Wyszukiwał w ciągu słowa, które mają więcej niż 3 litery.
def f(input):
    return [i for i in input.split() if len(i) > 3]
print(f(input))

#Znajdował wszystkie słowa kończące się na określoną literę alfabetu (np. a).
list= [t for t in input.split() if t.endswith('i') ]
print(list)

#Znajdował wszystkie słowa zaczynające się na określoną literę alfabetu (np. t).
import re 
list = re.findall("[m]\w+", input)
print(list)

#Znajdował wszystkie słowa w ciągu, które zaczynają się wielką literą.
import re
re.findall(r'[^.]\s([A-Z]\w+)', input)

#Sprawdzał,  czy  określona  litera  znajduje  się  w  podanym  ciągu  znaków (nieważne na jakiej pozycji).
input.count('di')

#Sprawdzał, czy w ciągu znaków występują liczby.
def num_there(input):
    return any(i.isdigit() for i in input)

num_there(input)
# odpowiedź False jest prawdziwa, ponieważ w zdaniu nie ma liczb

#Usuwał wszystkie spacje z ciągu znaków i zastępował je cyfrą 0
input.replace(" ", "0")

#Zamieniał określoną literę (podaną przez użytkownika) na inną (również podaną przez użytkownika).
input.replace("K", "W")

"""##Wyrażenia regularne –moduł re"""

import re

#'Hi World, my name is Klaudia. I am 22 years old. (Nice to meet you!)'

#Usuwał  wszystkie  znaki  w  ciągu,  które  znajdują  się  w  nawiasach  ()  (wraz znawiasami)
text = input("Wpisz swoje zdanie")
print (input)

patn = re.sub(r"\(.*?\)", "", text)
print(patn)

#Sprawdzał,  czy  w  podanym  przez  użytkownika  ciągu  występuje  sekwencja znaków, w której znajduje się jedna lub więcej liter b. 
b= input("Wpisz swój ciąg wyrazów. Pamiętaj (albo nie) o literze b! ")

#Wyszukiwał w teście słowa zawierające b.
def extract_b(b):
     
# inicjowanie zmiennej listy b
    b_list = []
     
# dzielenie tekstu na słowa
    for word in b.split():
         
# sprawdzanie pierwszego znaku każdego słowa
        if word[0] == 'b':
             
# dodanie słowa do b_list
            b_list.append(word[1:])
     
# drukowanie listy b
    print("The b in \"" + b + "\" are :")
    for b in b_list:
        print(b)

print(extract_b(b))

#Usuwał wszystkie małe litery z podanego ciągu.
import re
litera = input("Wpisz swoją literę")
remove_lower = lambda litera: re.sub('[a-z]', '', litera)
s = remove_lower(litera)

print(s)

#Wyszukiwał w tekście liczb o długości od 1 do 3 cyfr.
num = input("Wpisz swoje liczby: ")
re.findall(r'\b\d{3}\b', num)

#Wyszukiwał w teście słowa będące hasztagami.

slowa= input("Wpisz swoje słowa. Pamiętaj o hasztagu!" )
def extract_hashtags(slowa):
     
# inicjowanie zmiennej listy hashtag
    hashtag_list = []
     
# dzielenie tekstu na słowa
    for word in slowa.split():
         
# sprawdzanie pierwszego znaku każdego słowa
        if word[0] == '#':
             
# dodanie słowa do hashtag_list
            hashtag_list.append(word[1:])
     
# drukowanie listy hashtagów
    print("The hashtags in \"" + slowa + "\" are :")
    for hashtag in hashtag_list:
        print(hashtag)

extract_hashtags(slowa)